<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="Eliminar.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAA
        7AAAAOwBeShxvQAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAOQSURBVFhHxZVJ
        TBNhFMcxMerFuMSLXjx4couRKhLkgInKQTxAYmLUxGAiS6G0aGghbsSLJCYEPaiBugIxFIuymBAQREVx
        geJG1LgArglghNBZmE7n+b7mazstX4cBEf7JLz0wfb/H+/q9ifqX5HdJBqvLcxppt7qkPvwUkSHkrc3l
        cdi65AP5r2EJfXz6Yu2SYlHyAAEdcEiRrRMW0a9PPYX3YS4WO6cqrhucyPf8bmkzLTX5oHwBFmoML0zA
        4nD6tQfOvpOhqEeGYy/HP0PhLU1iFi05iQDMwbFXhBcsfOOBup9e6OEB+qUgvWMAT/4oUPpJ9jXnf97S
        IELmJTfk3BFSaWV9yXNJJrWYYP8iwycxVMyiAxs5hdMx14mQcdHtw2jnZIuTW07La8fSDYtRSH7ZAXlF
        v5cpi0TXqAIFN/lAAwSTg2+jCu1Yuz2n1PKSD7JvxCwRi7c4pQ4Oj2RYAaOqgYxSTjnqFFZSTeTgGfb4
        5eQ8O0cUpoiFX+7nxgspdApO4QLVsJPXKa5S//fF72WmiEW4nPAYp6BuILuS/0pV7OAm261u4NZ3fWfP
        kvs5co0LNGC8ygtUxQ5evTR1A00DE49fS044Uy8Ep1DmVqiKHWzAom6gdUi7gYnkhOKm4HUkO4Gq2LG5
        5L3qBhp+RT4CPXLCcUfwOhqvcBJVsWPr9MSrGyDL51/kz9wQchWzyoVhqmLH9BHm49Ub8Tdw4pVn3PbT
        Kyc0ffMG5ASTQ2ilqsixdktV6ik4VTdhMvKnSPg2NNfwe6gmcsKPoQDfdM/wPk9GTqh0hS6hrBuc9vjV
        yWnsDWxDwskWETpG2CIWzneeEDnBVCscpuW1syMpxZq0Lw1yHw765P63mvmyGxp7vUxhAGzyfOvYeHkV
        /5yW1w6R79yVAoRkYwGYa4NbzE9eOe8b770fXng0qEAbLqu7eFtKmsXQlw8lq5wb2OOAeVQROWo5IXbr
        Nth+8CRur9FxRfWCu78v1wFLqSJyWPLVazf42JK4H9LtP8dYgkhklnHenGqhgpbXjpacYIjZ6ru7ObVi
        hqmC788o4xSWlJB5jRPwrjdn13IrfMUnil65OofaYaHZyaVn14gl+OO6baoWrlucQqG5Xoinj+jLVOTT
        llmVJyYlp2rJo2PiWuij/yco/TxrchIU/541OQnK7TN65uFJSEhYFr0p7v2a9RuVdRsMkiEm3k7/NAOJ
        ivoLQMc1bsiCGXcAAAAASUVORK5CYII=
</value>
  </data>
</root>